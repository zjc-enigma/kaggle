    return(m[2])
}

all.titles <- unlist(lapply(train.data$Names, extract.titles))

head(all.titles)
all.titles
lapply(train.data$Names, extract.titles)
extract.titles <- function(x) {
    m <- str_match(x, "^.+,\\s(\\w+)\\..*$")
    return(m[2])
}

all.titles <- unlist(lapply(train.data$Name, extract.titles))

head(all.titles)
attr
help(attr)
train.data$Title <- unlist(lapply(train.data$Name, extract.titles))
require("Hmisc")
options(digits=2)
help(bystat)
help(bystats)
bystats(train.data$Age, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})

table(train.data$Title)
summary(train.data$Title)
bystats2(train.data$Age, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
help(bystat)
help(bystats)
bystats(train.data$Age, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$Age, 
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$Age, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$Pclass, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$Parch, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$Parch, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$SibSp, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$Fare, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$Fare, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$Parch, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$SibSp, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$Survived, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$Age, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})

 <- bystats(train.data$Age, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
 <- bystats(train.data$Age, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
bystats(train.data$Age, train.data$Title,
bystats(train.data$Age, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})

aa <- bystats(train.data$Age, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
class(aa)
aa[1]
aa[[1]]
aa[[2]]
as.data.frame(aa)
aa
help(bystats)
as.matrix(aa)
aam <- as.matrix(aa)
class(aam)
class(as.matrix(aa))
help(bystats2)
mode(aa)
aa[1,2]
print(aa) 
help(Hmisc)
help(Hmics)
aa <- bystats(train.data$Age, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})
ddply(train.data$Age, train.data$Title, summarise, mean=mean)
ddply(train.data$Age, train.data$Title, summarise, mean=mean)
bystats(train.data$Age, train.data$Title,
        fun=function(x) {c(Mean=mean(x), Median=median(x))})

Extract(aa)
Extract
Extract()
help(Extract)
getElement(aa)
aa$name
aa
class(aa)
getElement(aa, Mean)
getElement(aa, )
getElement(aa)
names(aa)
str(aa)
summaries
ddply(train.data$Age, train.data$Title, fun=function(x) {mean(x)})
trace()
tr
trace()
ddply(train.data$Age, variables=train.data$Title, fun=function(x) {mean(x)})
ddply(train.data, variables=train.data$Title, fun=function(x) {mean(x)})
ddply(train.data, .variables=train.data$Title, fun=function(x) {mean(x)})
ddply(train.data$Age, .variables=train.data$Title, fun=function(x) {mean(x)})
ddply(train.data$Age, train.data$Title, .fun=function(x) {mean(x)})
ddply(train.data$Age, train.data$Title, .fun=function(x) {mean(x)}
aa
sum(train.data[train.data$Title=="Mr"]$Age)
train.data$Title=="Mr"]
train.data$Title=="Mr"
train.data[train.data$Title=="Mr"]
subset(train.data, Title=="Mr")
subset(train.data, Title=="Mr")$Age
sum(subset(train.data, Title=="Mr")$Age)
sum(subset(train.data, Title=="Mr")$Age)
sum(subset(train.data, Title=="Mr")$Age,na.rm=T)
aa
sum(subset(train.data, Title=="Mr")$Age,na.rm=T)/(398-119)
sum(subset(train.data, Title=="Mr")$Age,na.rm=T)/(398)
sum(subset(train.data, Title=="Mr")$Age,na.rm=T)/(398.0)
float(sum(subset(train.data, Title=="Mr")$Age,na.rm=T)/(398.0))
double(sum(subset(train.data, Title=="Mr")$Age,na.rm=T)/(398.0))
ddply(train.data$Age, train.data$Title
ddply(train.data$Age, train.data$Title, summarise, mean=mean(train.data$Age))
ddply(train.data, "Title", summarise, mean=mean(train.data$Age))
ddply(train.data$Age, "Title", summarise, mean=mean(train.data$Age))
ddply(train.data, "Title", summarise, mean=mean(Age))
aa
help(mean)
ddply(train.data, "Title", summarise, mean=mean(Age, rm.na=T))
ddply(train.data, "Title", summarise, mean=mean(Age, na.rm=T))
ddply(train.data, "Title", summarise, NA.num=sum(is.na(Age)), mean=mean(Age, na.rm=T))
ddply(train.data, "Title", summarise, NA.count=sum(is.na(Age)), mean=mean(Age, na.rm=T))
ddply(train.data, "Title", summarise, NA.count=sum(is.na(Age)), mean=mean(Age, na.rm=T), median=median(Age, na.rm=T))
aa
ddply(train.data, "Title", summarise, total.num=length(Age), NA.count=sum(is.na(Age)), mean=mean(Age, na.rm=T), median=median(Age, na.rm=T))
help(length)
ddply(train.data, "Title", summarise, value.count=sum(!is.na(Age)), NA.count=sum(is.na(Age)), mean=mean(Age, na.rm=T), median=median(Age, na.rm=T))
bb <- ddply(train.data, "Title", summarise, value.count=sum(!is.na(Age)), NA.count=sum(is.na(Age)), mean=mean(Age, na.rm=T), median=median(Age, na.rm=T))
class(bb)
aa
ddply(train.data, Title, summarise, value.count=sum(!is.na(Age)), NA.count=sum(is.na(Age)), mean=mean(Age, na.rm=T), median=median(Age, na.rm=T))
bb <- ddply(train.data, Title, summarise, value.count=sum(!is.na(Age)), NA.count=sum(is.na(Age)), mean=mean(Age, na.rm=T), median=median(Age, na.rm=T))
bb <- ddply(train.data, "Title", summarise, value.count=sum(!is.na(Age)), NA.count=sum(is.na(Age)), mean=mean(Age, na.rm=T), median=median(Age, na.rm=T))
bb
aa
help(impute)
bb
table(train.data$Age)
bb <- age.median.data <- ddply(train.data,
                         "Title",
                         summarise,
                         valid.num=sum(!is.na(Age)),
                         NA.num=sum(is.na(Age)),
                         mean=mean(Age, na.rm=T),
                         median=median(Age, na.rm=T))

bb[NA.num!=0]
bb
bb[bb$NA.num!=0]
bb[bb$NA.num!=0,]
bb[bb$NA.num!=0,]$Title
class(bb[bb$NA.num!=0,]$Title)
cc <- class(bb[bb$NA.num!=0,]$Title)
for(elem in cc) {print(paste(elem, "shown")}
for(elem in cc) {print(paste(elem, "shown"))}
cc <- bb[bb$NA.num!=0,]$Title
for(elem in cc) {print(paste(elem, "shown"))}
impute
impute(train.data[which(train.data$Title=="Mr")]$Age)
which(train.data$Title=="Mr")
train.data[which(train.data$Title=="Mr")]
train.data[which(train.data$Title=="Mr"),]
impute(train.data[which(train.data$Title=="Mr"),]$Age)
aa
impute(train.data[which(train.data$Title=="Mr"),]$Age)
impute(train.data[which(Title=="Mr"),]$Age)
bb
age.median.data <- ddply(train.data,
                         "Title",
                         summarise,
                         valid.num=sum(!is.na(Age)),
                         NA.num=sum(is.na(Age)),
                         mean=mean(Age, na.rm=T),
                         median=median(Age, na.rm=T))

dim(age.media.data)
dim(age.median.data)
age.media.data
age.median.data

imputate.age <- function() {
    impute.titles <- subset(age.median.data, NA.num!=0)$Title
    for(t in impute.titles) {
        train.data[train.data$Title==t & is.na(train.data$Age), ]$Age <- subset(age.media.data, Title==t)$median
    }
}

head(train.data[train.data$Title=="Mr", ]$Age)
head(train.data[train.data$Title=="Mr" & is.na(train.data$Age), ]$Age)
imputate.age <- function() {
    impute.titles <- subset(age.median.data, NA.num!=0)$Title
    for(t in impute.titles) {
        train.data[train.data$Title==t & is.na(train.data$Age), ]$Age <- subset(age.median.data, Title==t)$median
    }
}
head(train.data[train.data$Title=="Mr",]$Age)
subset(age.median.data, Title=="Mr")
subset(age.median.data, Title=="Mr")$median
    impute.titles <- subset(age.median.data, NA.num!=0)$Title
impute.titles
impute.age()
impute.age <- function() {
    impute.titles <- subset(age.median.data, NA.num!=0)$Title
    for(t in impute.titles) {
        train.data[train.data$Title==t & is.na(train.data$Age), ]$Age <- subset(age.median.data, Title==t)$median
    }
}

impute.age()
head(train.data[train.data$Title=="Mr",])
head(train.data[train.data$Title=="Mr",]$Age)
impute.age <- function() {
    impute.titles <- subset(age.median.data, NA.num!=0)$Title
    for(t in impute.titles) {
        train.data[train.data$Title==t & is.na(train.data$Age), ]$Age <- subset(age.median.data, Title==t)$median
    }
}

impute.age()
head(train.data[train.data$Title=="Mr",]$Age)
impute.age <- function() {
    impute.titles <- subset(age.median.data, NA.num!=0)$Title
    for(t in impute.titles) {
        train.data[train.data$Title==t & is.na(train.data$Age), ]$Age <- subset(age.median.data, Title==t)$median
        print(paste("replace train.data NA with", subset(age.median.data, Title==t)$median))
    }
}

impute.age()
sum(is.na(subset(train.data, Title=="Mr")$Age))
aa
namr <- subset(train.data, Title=="Mr")$Age)
namr <- subset(train.data, Title=="Mr")$Age
namr
namr <- subset(train.data, Title=="Mr")
namr
namr[is.na(namr$Age)]
namr[is.na(namr$Age), ]
namr[is.na(namr$Age), ]$Age
namr[is.na(namr$Age), ]$Age <- 30
namr[is.na(namr$Age), ]$Age
namr
namr[is.na(namr$Age), ]
    impute.titles <- subset(age.median.data, NA.num!=0)$Title
    for(t in impute.titles) {
    for(t in impute.titles) {
    for(t in impute.titles) {
        train.data[train.data$Title==t & is.na(train.data$Age), ]$Age <- subset(age.median.data, Title==t)$median
        print(paste("replace train.data NA with", subset(age.median.data, Title==t)$median))
    }

head(train.data[train.data$Title=="Mr", ]$Age)
ls()
train.data[is.na(train.data$Age), ]
train.data$Age[which(train.data$Title=="Dr")]
subset(age.median.data, Title==t)$median
age.median.data
class(train.data$Age)
summary(train.data$Embarked)
train.data[is.na(train.data$Embarked),]
dim(train.data)
train.data$Embarked <- as.factor(train.data$Embarked)
summary(train.data$Embarked)
summary(train.data$Fare)
hist(train.data$Fare)
table(train.data$Fare)
subset(train.data, Fare==0)
train.data[grep(train.data$Name, "Jack"),]
help(grep)
train.data[grep("Jack",train.data$Name),]
head(train.data[order(Fare), ])
head(train.data[order(train.data$Fare), ])
head(train.data[order(train.data$Fare), ], n=20)
head(train.data[order(-train.data$Fare), ], n=20)
boxplot(train.data$Fare ~ train.data$Pclass,
        main="pclass by Fare",
        xlab="Pclass",
        ylab="Fare")


subset(train.data, Title=="Master")
train.data$Title
unique(train.data$Title)
subset(train.data, is.na(Title))
extract.titles <- function(x) {
    m <- str_match(x, "^.+,\\s([\\s\\w]+)\\..*$")
    return(m[2])
}


train.data$Title <- unlist(lapply(train.data$Name, extract.titles))

unique(train.data$Title)
extract.titles <- function(x) {
    m <- str_match(x, "^.+,\\s([a-zA-Z\\s]+)\\..*$")
    return(m[2])
}


train.data$Title <- unlist(lapply(train.data$Name, extract.titles))

unique(train.data$Title)
help(str_match)
extract.titles <- function(x) {
    m <- str_match(x, "^.+,\\s*+?\\..*$")
    return(m[2])
}


train.data$Title <- unlist(lapply(train.data$Name, extract.titles))


extract.titles <- function(x) {
    m <- str_match(x, "^.+,\\s*+\\?\\..*$")
    return(m[2])
}


train.data$Title <- unlist(lapply(train.data$Name, extract.titles))


extract.titles <- function(x) {
    m <- str_match(x, "^.+,\\s(*+?)\\..*$")
    return(m[2])
}


train.data$Title <- unlist(lapply(train.data$Name, extract.titles))



extract.titles <- function(x) {
    m <- str_match(x, "^.+,\\s\\(*+?\\)\\..*$")
    return(m[2])
}


train.data$Title <- unlist(lapply(train.data$Name, extract.titles))


extract.titles <- function(x) {
    m <- str_match(x, "^.+,\\s(.*+?)\\..*$")
    return(m[2])
}

train.data$Title <- unlist(lapply(train.data$Name, extract.titles))


extract.titles <- function(x) {
    m <- str_match(x, "^.+,\\s(.+?)\\..*$")
    return(m[2])
}


train.data$Title <- unlist(lapply(train.data$Name, extract.titles))


unique(train.data$Title)
age.median.data <- ddply(train.data,
                         "Title",
                         summarise,
                         valid.num=sum(!is.na(Age)),
                         NA.num=sum(is.na(Age)),
                         mean=mean(Age, na.rm=T),
                         median=median(Age, na.rm=T))

impute.titles <- subset(age.median.data, NA.num!=0)$Title
for(t in impute.titles) {
    train.data[train.data$Title==t & is.na(train.data$Age), ]$Age <- subset(age.median.data, Title==t)$median
}


rm(list=ls())
require("Amelia")
require("vcd")
require("corrgram")
require("stringr")
options(digits=2)

train.file <- "../data/train.csv"
test.file <- "../data/test.csv"

train.data <- read.csv(file=train.file,
                       sep=',',
                       stringsAsFactors=F,
                       na.strings=c("NA", ""))


corrgram.data <- train.data
corrgram.data$Embarked <- revalue(corrgram.data$Embarked,
                                  c("C"=1, "Q"=2, "S"=3))

corrgram.vars <- c("Survived", "Pclass", "Sex", "Age",
                   "SibSp", "Parch", "Fare", "Embarked")


corrgram(corrgram.data[, corrgram.vars],
         order=F,
         lower.panel=panel.shade,
         upper.panel=panel.pie,
         text.panel=panel.txt,
         main="Titanic training data")



extract.titles <- function(x) {
    m <- str_match(x, "^.+,\\s(.+?)\\..*$")
    return(m[2])
}

train.data$Title <- unlist(lapply(train.data$Name, extract.titles))


age.median.data <- ddply(train.data,
                         "Title",
                         summarise,
                         valid.num=sum(!is.na(Age)),
                         NA.num=sum(is.na(Age)),
                         mean=mean(Age, na.rm=T),
                         median=median(Age, na.rm=T))

impute.titles <- subset(age.median.data, NA.num!=0)$Title
for(t in impute.titles) {
    train.data[train.data$Title==t & is.na(train.data$Age), ]$Age <- subset(age.median.data, Title==t)$median
}


train.data$Embarked <- as.factor(train.data$Embarked)
summary(train.data$Embarked)

train.data$Embarked[which(is.na(train.data$Embarked))] <- 'S'


unique(train.data$Title <- 
unique(train.data$Title)
train.data$Age[which(train.data$Title=="Dr")]
boxplot(train.data$Age ~ train.data$Title,
        main="age by title",
        xlab="Title", ylab="Age"
        )

summary(train.data$Title)
train.data$Title <- factor(train.data$Title,
                           c("Capt","Col","Major","Sir",
                             "Lady","Rev","Dr","Don","Jonkheer",
                             "the Countess","Mrs","Ms","Mr",
                             "Mme","Mlle","Miss","Master"))

summary(train.data$Title)
boxplot(train.data$Age ~ train.data$Title,
        main="age by title",
        xlab="Title", ylab="Age"
        )

help(apply)
library(multicores)
library(multicore)
boxplot(train.data$Age ~ train.data$Title,
        main="age by title",
        xlab="Title", ylab="Age"
        )

boxplot(train.data$Age ~ train.data$Title,
        main="age by title",
        xlab="Title", ylab="Age"
        )

boxplot(train.data$Age ~ train.data$Title,
        main="age by title",
        xlab="Title", ylab="Age"
        )

q()
y
boxplot(train.data$Age ~ train.data$Title,
        main="age by title",
        xlab="Title", ylab="Age"
        )

boxplot(train.data$Age ~ train.data$Title,
        main="age by title",
        xlab="Title", ylab="Age"
        )

q()
y
